/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useThree } from "@react-three/fiber";
// import * as THREE from "@react-three";

const deg2rad = (degrees) => degrees * (Math.PI / 180);

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/waving.glb");
  const { actions } = useAnimations(animations, group);

  useThree(({ camera }) => {
    camera.rotation.set(deg2rad(32), 0, 0);
  });

  useEffect(() => {
    console.log(actions);
    actions["Armature|mixamo.com|Layer0"].play();
    setTimeout(() => {
      // actions["Armature|mixamo.com|Layer0"].stop();
    }, actions["Armature|mixamo.com|Layer0"].time);
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group name="Armature" rotation={[2, 0, 0]} scale={0.035}>
          <primitive object={nodes.mixamorig6Hips} />
          <skinnedMesh
            geometry={nodes.Ch09.geometry}
            material={materials.Ch09_body}
            skeleton={nodes.Ch09.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/waving.glb");
